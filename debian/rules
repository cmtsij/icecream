#!/usr/bin/make -f
# Sample debian/rules that uses debhelper.
# This file is public domain software, originally written by Joey Hess. 
#
# Modified to make a template file for a multi-binary package with separated
# build-arch and build-indep targets  by Bill Allombert 2001

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

export CFLAGS=-O2
export CXXFLAGS=-O2

objdir = $(CURDIR)/obj

-include debian/debiandirs

debian/debiandirs:
	perl -w debian/debianrules echodirs > debian/debiandirs

configure: configure-stamp
configure-stamp:
	dh_testdir

	# Apply Debian specific patches
	if test -d $(CURDIR)/debian/patches ;\
	then \
		for i in $(CURDIR)/debian/patches/*.diff.uu ;\
		do \
			cd $(CURDIR)/debian/patches ;\
			uudecode "$$i" ;\
			cd $(CURDIR) ;\
		done ;\
		patches=$$(find $(CURDIR)/debian/patches -name *.diff | sort);\
	fi ;\
	if test ! -f patch-stamp; then \
		for patch in $$patches ;\
		do \
			echo APPLYING PATCH\: "$${patch##*/}" ;\
			patch -p1 < "$$patch" ;\
		done ;\
		touch patch-stamp ;\
	fi

	$(MAKE) -f Makefile.cvs

	# ensure configure is executable
	chmod +x configure

	# make build directory
	mkdir $(objdir)

	# run configure with build tree $(objdir)
	cd $(objdir) && \
	 ../configure $(configkde)

	touch configure-stamp

#Architecture
build: build-arch

build-arch: build-arch-stamp
build-arch-stamp: configure-stamp
	dh_testdir

	cd $(objdir) && \
	$(MAKE)

	# generate manpages
	#for i in debian/man/*.sgml; do \
	#	docbook-to-man $$i > `dirname $$i`/`basename $$i .sgml`.1 ;\
	#done

	touch build-arch-stamp

debian-clean:
	dh_testdir
	dh_testroot

	dh_clean

clean:
	dh_testdir
	dh_testroot
	rm -f build-arch-stamp configure-stamp \
		debian/debiandirs debian/man/*.1

	# Remove Debian specific patches
	if test -d $(CURDIR)/debian/patches ;\
	then \
		patches=$$(find $(CURDIR)/debian/patches -name *.diff | sort -r);\
	fi ;\
	if test -f patch-stamp; then \
		for patch in $$patches ;\
		do \
			echo REMOVING PATCH\: "$${patch##*/}" ;\
			patch -p1 -R < "$$patch" ;\
		done ;\
		for i in $(CURDIR)/debian/patches/*.diff.uu ;\
		do \
			 rm -f "$${i%%.uu}" ;\
		done ;\
		rm -f patch-stamp ;\
	fi

	# Remove build tree
	rm -rf $(objdir)

	# if Makefile exists run distclean
	if test -f Makefile; then \
		$(MAKE) distclean; \
	fi

	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	cd $(objdir) && \
	$(MAKE) install DESTDIR=$(CURDIR)/debian/tmp

	(cd $(CURDIR)/debian/tmp/usr/sbin ; mv scheduler icecc-scheduler)
	(cd $(CURDIR)/debian/tmp/usr/lib/pkgconfig ; mv icecream.pc icecc.pc)

	dh_install --sourcedir=debian/tmp

# Build architecture-dependent files here.
binary-arch: build-arch install
	dh_testdir
	dh_testroot
	dh_installchangelogs
	dh_installdocs
#	dh_installexamples
	dh_installmenu
	dh_installdebconf
	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
	dh_installinit
#	dh_installcron
#	dh_installinfo
	dh_installman
	dh_link
	dh_strip
	dh_compress -X.bz2 -X.css -X.dcl -X.docbook -X-license -X.tag
	dh_fixperms
	dh_perl
#	dh_python
	dh_makeshlibs -V
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-arch
.PHONY: build clean binary-arch binary install configure
